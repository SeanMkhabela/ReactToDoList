{"version":3,"sources":["Components/TodoForm.js","Components/Todo.js","Components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","className","onSubmit","preventDefault","id","Math","floor","random","text","type","placeholder","name","onChange","ref","Todo","todos","completeTodo","removeTodo","updatedTodo","setEdit","map","todo","index","isComplete","onClick","TodoList","setTodos","test","newTodos","updatedTodos","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAsDeA,MApDf,SAAkBC,GAAQ,IAAD,EACKC,mBAASD,EAAME,KAAOF,EAAME,KAAKC,MAAO,IAD7C,mBACdC,EADc,KACPC,EADO,KAGfC,EAAWC,iBAAO,MAExBC,qBAAU,WACNF,EAASG,QAAQC,WAGrB,IAAMC,EAAe,SAAAC,GAAMP,EAASO,EAAEC,OAAOV,QAU7C,OACI,sBAAMW,UAAU,YAAYC,SATX,SAAAH,GAAMA,EAAEI,iBAE7BhB,EAAMe,SAAS,CAACE,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,KAAKjB,IAErBC,EAAS,KAIL,SACCL,EAAME,KAAQ,qCACf,uBACAoB,KAAK,OACLC,YAAY,mBACZpB,MAAOC,EACPoB,KAAK,OACLV,UAAU,mBACVW,SAAUd,EACVe,IAAKpB,IAEL,wBAAQQ,UAAU,mBAAlB,0BAGI,qCACA,uBACAQ,KAAK,OACLC,YAAY,aACZpB,MAAOC,EACPoB,KAAK,OACLV,UAAU,aACVW,SAAUd,EACVe,IAAKpB,IAEL,wBAAQQ,UAAU,cAAlB,6B,eCJGa,MArCf,YAA+D,IAAhDC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,YAAc,EAEnC9B,mBAAS,CAC5BgB,GAAI,KACJd,MAAO,KAJ+C,mBAEpDD,EAFoD,KAE9C8B,EAF8C,KAY9D,OAAI9B,EAAKe,GACE,cAAC,EAAD,CAAUf,KAAOA,EAAMa,SANb,SAAAZ,GACjB4B,EAAY7B,EAAKe,GAAId,GACrB6B,EAAQ,CAAEf,GAAI,KAAMd,MAAM,QAQnByB,EAAMK,KAAI,SAACC,EAAMC,GAAP,OACb,sBAAKrB,UAAWoB,EAAKE,WAAa,oBAAqB,WAAvD,UACI,qBAAmBC,QAAS,kBAAMR,EAAaK,EAAKjB,KAApD,SACGiB,EAAKb,MADEa,EAAKjB,IAGf,sBAAKH,UAAU,QAAf,UACI,cAAC,IAAD,CACAuB,QAAS,kBAAMP,EAAWI,EAAKjB,KAC/BH,UAAU,gBAEV,cAAC,IAAD,CACCuB,QAAS,kBAAML,EAAQ,CAAEf,GAAIiB,EAAKjB,GAAId,MAAO+B,EAAKb,QAClDP,UAAU,mBAXqDqB,OCiCjEG,MAnDf,SAAkBJ,GAAO,IAAD,EACUjC,mBAAS,IADnB,mBACT2B,EADS,KACFW,EADE,KA0CpB,OACI,gCACI,4DACA,cAAC,EAAD,CAAUxB,SA1CE,SAAAmB,GACZ,GAAIA,EAAKb,OAAQ,QAAQmB,KAAKN,EAAKb,MAAnC,CAIA,IAAMoB,EAAQ,CAAIP,GAAJ,mBAAaN,IAE3BW,EAASE,OAoCT,cAAC,EAAD,CAAMb,MAAOA,EAAOC,aAdH,SAAAZ,GACjB,IAAIyB,EAAed,EAAMK,KAAI,SAAAC,GAIzB,OAHIA,EAAKjB,KAAOA,IACZiB,EAAKE,YAAcF,EAAKE,YAErBF,KAEXK,EAASG,IAOuCZ,WAvBjC,SAAAb,GACf,IAAM0B,EAAY,YAAIf,GAAOgB,OAAOV,EAAKjB,KAAOA,GAEhDsB,EAASI,IAoB+DZ,YAjCxD,SAACc,EAAQC,GACrBA,EAASzB,OAAQ,QAAQmB,KAAKM,EAASzB,OAI3CkB,GAAS,SAAAQ,GAAI,OAAIA,EAAKd,KAAI,SAAAe,GAAI,OAAKA,EAAK/B,KAAO4B,EAASC,EAAWE,eCVhEC,MARf,WACE,OACE,qBAAKnC,UAAU,WAAf,SACE,cAAC,EAAD,OCHNoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fc4c1a22.chunk.js","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\r\n\r\nfunction TodoForm(props) {\r\n    const [input, setInput] = useState(props.edit ? props.edit.value: '');\r\n\r\n    const inputRef = useRef(null)\r\n\r\n    useEffect(() => {\r\n        inputRef.current.focus()\r\n    })\r\n\r\n    const handleChange = e => {setInput(e.target.value);};\r\n\r\n    const handleSubmit = e => {e.preventDefault();\r\n    \r\n    props.onSubmit({id: Math.floor(Math.random() * 1000),\r\n                    text:input});\r\n\r\n    setInput('');\r\n    };\r\n\r\n    return (\r\n        <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n        {props.edit ? (<>\r\n        <input \r\n        type='text'\r\n        placeholder='Update Your Todo'\r\n        value={input}\r\n        name='text'\r\n        className='todo-input edit '\r\n        onChange={handleChange}\r\n        ref={inputRef}\r\n        />\r\n        <button className=\"todo-button edit\">Add todo </button>\r\n        </>) : \r\n        (\r\n            <>\r\n            <input \r\n            type='text'\r\n            placeholder='Add a todo'\r\n            value={input}\r\n            name='text'\r\n            className='todo-input'\r\n            onChange={handleChange}\r\n            ref={inputRef}\r\n            />\r\n            <button className=\"todo-button\">Add todo </button>\r\n            </>\r\n\r\n        ) }\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default TodoForm\r\n","import React, {useState} from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport {RiCloseCircleLine} from 'react-icons/ri'\r\nimport {TiEdit} from 'react-icons/ti'\r\n\r\nfunction Todo({todos, completeTodo, removeTodo, updatedTodo}) {\r\n\r\n    const[edit, setEdit] = useState({\r\n        id: null,\r\n        value: ''\r\n    });\r\n\r\nconst submitUpdate = value => {\r\n    updatedTodo(edit.id, value)\r\n    setEdit({ id: null, value:''})\r\n}\r\n\r\nif (edit.id){\r\n    return <TodoForm edit ={edit} onSubmit={submitUpdate} />;\r\n}\r\n\r\n\r\n    return todos.map((todo, index) =>(\r\n        <div className={todo.isComplete ? 'todo-row complete' :'todo-row'} key={index}>\r\n            <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n              {todo.text}  \r\n            </div>\r\n            <div className=\"icons\">\r\n                <RiCloseCircleLine\r\n                onClick={() => removeTodo(todo.id)}\r\n                className='delete-icon'\r\n                />\r\n                <TiEdit\r\n                 onClick={() => setEdit({ id: todo.id, value: todo.text })}\r\n                 className='edit-icon'\r\n                />\r\n            </div>\r\n        </div>))\r\n\r\n       \r\n}\r\n\r\nexport default Todo\r\n","import React, {useState} from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport Todo from './Todo';\r\n\r\n\r\nfunction TodoList(todo) {\r\n        const [todos, setTodos] = useState([])\r\n\r\n        const addTodo = todo => {\r\n            if(!todo.text || /^\\s*$/.test(todo.text)){\r\n                return;\r\n            }\r\n\r\n            const newTodos = [todo, ...todos];\r\n\r\n            setTodos(newTodos);\r\n        };\r\n\r\n        const updatedTodo = (todoId, newValue) => {\r\n            if(!newValue.text || /^\\s*$/.test(newValue.text)){\r\n                return;\r\n            }\r\n\r\n            setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item))\r\n            );\r\n        };\r\n\r\n\r\n        const removeTodo = id => {\r\n            const removeArr = [...todos].filter(todo.id !== id);\r\n\r\n            setTodos(removeArr);\r\n        };\r\n\r\n\r\n\r\n            \r\n        const completeTodo = id => {\r\n            let updatedTodos = todos.map(todo =>{\r\n                if (todo.id === id){\r\n                    todo.isComplete = !todo.isComplete;\r\n                }\r\n                return todo;\r\n            });\r\n            setTodos(updatedTodos);\r\n        }\r\n\r\n    return (\r\n        <div>\r\n            <h1>What's the plan for today?</h1>\r\n            <TodoForm onSubmit={addTodo}/>\r\n            <Todo todos={todos} completeTodo={completeTodo} removeTodo={removeTodo} updatedTodo={updatedTodo}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoList\r\n","import React from 'react';\nimport './App.css';\nimport TodoList from './Components/TodoList';\n\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <TodoList/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}